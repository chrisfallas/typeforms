import{createContext as x,useMemo as y} from"react";import{v4 as I} from"uuid";import{useState as f} from"react";var h=({initialValues:K={},schemaValidation:J,onChange:O,onSubmit:Q})=>{const[z,L]=f(K),U=(q)=>z[q],R=async(q)=>{L((X)=>{const B={...X};return q.forEach(({name:W,value:$})=>{B[W]=$}),O?.(B),B})},Y=async(q,X)=>{R([{name:q,value:X}])};return{data:z,getValue:U,setValue:Y,setValues:R,onChange:async(q)=>{const X=q.target.name;let B=q.target.value;if(["",void 0,null].includes(B))B=void 0;else if(q.target.type==="number")B=Number(B);Y(X,B)},onSubmit:async(q)=>{q.preventDefault(),Q?.({ok:!0,data:z})}}},N=h;import{jsxDEV as C} from"react/jsx-dev-runtime";var w=x(null),b=({customFormId:K,initialValues:J,schemaValidation:O,onChange:Q,onSubmit:z,render:L,children:U})=>{const R=y(()=>K||I(),[K]),Z={...N({initialValues:J,schemaValidation:O,onChange:Q,onSubmit:z}),formId:R};return C(w.Provider,{value:Z,children:L?L(Z):U},void 0,!1,void 0,this)},T=b;import{jsxDEV as D} from"react/jsx-dev-runtime";var c=(K)=>{const{initialValues:J,schemaValidation:O,onChange:Q,onSubmit:z,children:L,id:U,...R}=K;return D(T,{customFormId:U,initialValues:J,schemaValidation:O,onChange:Q,onSubmit:z,render:({formId:Y,onSubmit:Z})=>D("form",{id:Y,onSubmit:Z,...R,children:L},void 0,!1,void 0,this)},void 0,!1,void 0,this)},g=c;import{useContext as F} from"react";var d=()=>{const K=F(w);if(!K)throw new Error("useFormContext must be used within a FormProvider");return K},k=d;var v=(K)=>{const J=k(),O=`${J.formId}-${K}`,Q=J.getValue(K);return{id:O,value:Q,setValue:async(L)=>{J.setValue(K,L)},onChange:J.onChange}},E=v;import{jsxDEV as _,Fragment as S} from"react/jsx-dev-runtime";var i=(K)=>{const{id:J,name:O,onChange:Q,label:z,labelId:L,labelClassName:U,labelRef:R,labelWrap:Y,labelPlacement:Z,render:M,...G}=K,{value:q,...X}=E(O),B=J||X.id,W=(H)=>{X.onChange(H),Q?.(H.target.value)};if(K.children)return K.children;const $={...G,id:B,name:O,value:String(q??""),onChange:W};if(M)return M($);const A=_("input",{...$},void 0,!1,void 0,this);if(!z)return A;if(Y==="wrap")return _("label",{id:L,className:U,ref:R,children:[_("span",{children:z},void 0,!1,void 0,this),A]},void 0,!0,void 0,this);const j=_("label",{id:L,className:U,ref:R,htmlFor:B,children:_("span",{children:z},void 0,!1,void 0,this)},void 0,!1,void 0,this);if(Z==="top")return _(S,{children:[j,A]},void 0,!0,void 0,this);return _(S,{children:[A,j]},void 0,!0,void 0,this)},P=i;var V=()=>({Form:g,Input:P,applyInputTypes:(K)=>K});var _K=V;export{_K as default};
