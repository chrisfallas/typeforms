import{createContext as zz,useMemo as Az} from"react";import{v4 as Jz} from"uuid";import{useEffect as a,useMemo as V,useState as F} from"react";var e=({initialValues:K={},validateOnSubmit:T=!0,validateOnChange:M=!1,validateOnBlur:N=!1,schemaValidation:U,onChange:q,onSubmit:H})=>{const[_,w]=F(K),[$,j]=F({}),[I,G]=F({isSubmitting:!1}),{isSubmitting:f}=I,x=async(z)=>G((A)=>({...A,isSubmitting:z})),D=(z)=>z?_[z]:void 0,S=(z)=>z?$[z]:void 0,y=async(z,A,Q)=>{const{include:J,exclude:X}=Q,Y={},Z=await A(z);for(let L in Z){let W=!0;if(J&&!J.includes(L))W=!1;if(X&&X.includes(L))W=!1;if(!W)continue;if(JSON.stringify(Z[L])!==JSON.stringify($[L]))Y[L]=Z[L]}return Y},g=async(z,A,Q)=>{const{include:J,exclude:X}=Q,Y={};for(let Z in A){let L=!0;if(J&&!J.includes(Z))L=!1;if(X&&X.includes(Z))L=!1;if(!L)continue;const W=A[Z],k=z[Z],p=await W?.(k);if(JSON.stringify(p)!==JSON.stringify($[Z]))Y[Z]=p}return Y},P=async(z={})=>{const{data:A,updateFormState:Q=!0}=z;if(!U||!A)return{};let J;if(typeof U==="function")J=await y(A,U,z);else J=await g(A,U,z);if(Q&&Object.keys(J).length)j((Y)=>({...Y,...J}));const X={};for(let Y in J){const Z=J[Y];if(Z?.length)X[Y]=Z}return X},B=(z)=>{let A=!1,Q,J;if(typeof z==="boolean")A=z;else if(Array.isArray(z.include))A=!0,Q=z.include;else if(Array.isArray(z.exclude))A=!0,J=z.exclude;return{isValidationRequired:A,include:Q,exclude:J}},O=async(z)=>{const{isValidationRequired:A,include:Q,exclude:J}=B(M),X={};let Y=0;const Z=[];for(let{name:L,value:W}of z){if(!L)continue;if(["",void 0,null].includes(W))X[L]=void 0;else X[L]=W;if(X[L]!==D(L))Y++;let k=A;if(Q&&!Q.includes(L))k=!1;if(J&&J.includes(L))k=!1;if(!k)continue;Z.push(L)}if(Z.length)P({data:X,include:Z});if(Y>0)w((L)=>{const W={...L,...X};return new Promise(()=>q?.(W)),W})},R=async(z,A)=>{if(!z||A===D(z))return;O([{name:z,value:A}])},r=async(z)=>{const A=z.target.name;if(!A)return;let Q=z.target.value;if(Q&&z.target.type==="number")Q=Number(Q);R(A,Q)},o=async(z)=>{const A=z.target.name;if(!A)return;const{isValidationRequired:Q,include:J,exclude:X}=B(N);let Y=Q;if(J&&!J.includes(A))Y=!1;if(X&&X.includes(A))Y=!1;if(!Y)return;P({data:_,include:[A]})},l=async(z)=>{z.preventDefault(),x(!0);try{const{isValidationRequired:A,include:Q,exclude:J}=B(T);if(!A)await H?.({ok:!0,data:_});else{const X=await P({data:_,include:Q,exclude:J});if(!Object.keys(X).length)await H?.({ok:!0,data:_});else await H?.({ok:!1,errors:X})}}finally{x(!1)}},i=async()=>{w(K),j({}),new Promise(()=>q?.(K))},n=V(()=>{const z=JSON.stringify(K),A=JSON.stringify(_);return z!==A},[K,_]),t=V(()=>{return!Object.keys($).length},[$]);return a(()=>{console.log("errors",$)},[$]),{data:_,isValid:t,isDirty:n,isSubmitting:f,errors:$,getValue:D,setValue:R,setValues:O,getErrors:S,onChange:r,onBlur:o,onSubmit:l,validate:P,reset:i}},v=e;import{jsxDEV as Lz} from"react/jsx-dev-runtime";var h=zz(null),Kz=({customFormId:K,initialValues:T,validateOnSubmit:M,validateOnChange:N,validateOnBlur:U,schemaValidation:q,onChange:H,onSubmit:_,render:w,children:$})=>{const j=Az(()=>K||Jz(),[K]),G={...v({initialValues:T,validateOnSubmit:M,validateOnChange:N,validateOnBlur:U,schemaValidation:q,onChange:H,onSubmit:_}),formId:j};return Lz(h.Provider,{value:G,children:w?w(G):$},void 0,!1,void 0,this)},c=Kz;import{jsxDEV as u} from"react/jsx-dev-runtime";var Qz=(K)=>{const{initialValues:T,validateOnSubmit:M,validateOnChange:N,validateOnBlur:U,schemaValidation:q,onChange:H,onSubmit:_,children:w,id:$,render:j,...I}=K;return u(c,{customFormId:$,initialValues:T,validateOnSubmit:M,validateOnChange:N,validateOnBlur:U,schemaValidation:q,onChange:H,onSubmit:_,render:(G)=>u("form",{id:G.formId,onSubmit:G.onSubmit,...I,children:j?j(G):w},void 0,!1,void 0,this)},void 0,!1,void 0,this)},m=Qz;import{useContext as Xz} from"react";var Yz=()=>{const K=Xz(h);if(!K)throw new Error("useFormContext must be used within a FormProvider");return K},b=Yz;var Zz=(K)=>{const T=b(),M=`${T.formId}-${K}`,N=T.getValue(K);return{id:M,value:N,setValue:async(q)=>{if(K)T.setValue(K,q)},onChange:T.onChange,onBlur:T.onBlur}},C=Zz;import{jsxDEV as E,Fragment as s} from"react/jsx-dev-runtime";var _z=(K)=>{const{id:T,name:M,value:N,onChange:U,onBlur:q,label:H,labelId:_,labelClassName:w,labelRef:$,labelWrap:j,labelPlacement:I,render:G,...f}=K,{value:x,...D}=C(M),S=T||D.id,y=async(R)=>{D.onChange(R),new Promise(()=>U?.(R.target.value))},g=async(R)=>{D.onBlur(R),new Promise(()=>q?.(R))},P={...f,id:S,name:M,value:M?String(x??""):N,onChange:y,onBlur:g};if(G)return G(P);const B=E("input",{...P},void 0,!1,void 0,this);if(!H)return B;if(j==="wrap")return E("label",{id:_,className:w,ref:$,children:[E("span",{children:H},void 0,!1,void 0,this),B]},void 0,!0,void 0,this);const O=E("label",{id:_,className:w,ref:$,htmlFor:S,children:E("span",{children:H},void 0,!1,void 0,this)},void 0,!1,void 0,this);if(I==="bottom")return E(s,{children:[B,O]},void 0,!0,void 0,this);return E(s,{children:[O,B]},void 0,!0,void 0,this)},d=_z;var $z=()=>({Form:m,Input:d,applyTypes:(K)=>K}),bz=$z;export{C as useFormElement,b as useFormContext,bz as default};
